generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?   @db.VarChar(64)
  cpf           String?   @db.VarChar(15)
  cnpj          String?   @db.VarChar(18)
  cellPhone     String?   @db.VarChar(20)
  level         Int?      @db.UnsignedInt
  meta          Json?
  image         String?   @db.Text
  actived       Boolean?  @default(false)
  createdAt     DateTime?  @default(now()) @db.Timestamp(0)
  updatedAt     DateTime?  @updatedAt
  accounts      Account[]
  sessions      Session[]

  @@map(name: "users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique
  userId             Int
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime? @default(now()) @db.Timestamp(0)
  updatedAt          DateTime? @updatedAt
  user               User      @relation(fields: [userId], references: [id])


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now()) @db.Timestamp(0)
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])

  @@map(name: "sessions")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  @@map(name: "verification_requests")
}

